<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                    xmlns:icons="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:helpers="clr-namespace:WPF_CourierFrim.Classes.Helpers">

    <!--#region Icons -->
    <Style TargetType="icons:PackIcon" x:Key="IconMini">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Width" Value="12"/>
    </Style>

    <Style TargetType="icons:PackIcon" x:Key="IconSmall">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>

    <Style TargetType="icons:PackIcon" x:Key="IconMedium">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
    </Style>

    <Style TargetType="icons:PackIcon" x:Key="IconLarge">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
    </Style>
    <!--#endregion-->

    <!--#region TextBlocks -->

    <!-- TextBlock тексты -->
    <Style TargetType="{x:Type TextBlock}" x:Key="TextH1">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextH2">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextH6">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextNormal">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextSmall">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextSmallSemiBold">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <!-- Run тексты -->
    <Style TargetType="{x:Type Run}" x:Key="TextCardTitle">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <Style TargetType="{x:Type Run}" x:Key="TextCardInfo">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <Style TargetType="{x:Type Run}" x:Key="TextCardCost">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>
    <!--#endregion-->

    <!--#region Текстовые поля -->
    <!--#region Стандартное текстовое поле  -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Padding" Value="18 14.5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <Grid IsHitTestVisible="False"
                              Cursor="{TemplateBinding Cursor}">

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False"/>

                            <TextBlock x:Name="placeholderText"
                                       Padding="20 14.5"
                                       IsHitTestVisible="False"
                                       Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontFamily="SF Pro Text"
                                       Visibility="Collapsed"
                                       FontSize="14"
                                       Foreground="{StaticResource TextDisabledBrush}"
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="placeholderText" Property="Foreground" Value="#ffffff"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Текстовое поле с иконкой -->
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxIcon">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Padding" Value="6 15 14 15"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <Grid IsHitTestVisible="False"
                              Cursor="{TemplateBinding Cursor}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False"
                                          Grid.Column="1"/>

                            <TextBlock x:Name="placeholderText"
                                       Padding="8 15 8 14"
                                       IsHitTestVisible="False"
                                       Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontFamily="SF Pro Text"
                                       Visibility="Collapsed"
                                       FontSize="14"
                                       Foreground="{StaticResource TextDisabledBrush}"
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"
                                       Grid.Column="1"/>

                            <icons:PackIcon Name="icon"
                                            Kind="{TemplateBinding helpers:TextBoxHelper.IconKind}"
                                            Foreground="{StaticResource TextDisabledBrush}"
                                            Margin="14 11 0 0"
                                            VerticalAlignment="Top"
                                            Width="24"
                                            Height="24"
                                            Grid.Column="0"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="placeholderText" Property="Foreground" Value="#ffffff"/>
                            <Setter TargetName="icon" Property="Foreground" Value="#ffffff"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Стандартное поле пароля -->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="20 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <Grid IsHitTestVisible="False"
                              Cursor="{TemplateBinding Cursor}">

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Поле пароля с иконкой -->
    <Style TargetType="{x:Type PasswordBox}" x:Key="PasswordBoxIcon">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="46 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <Grid IsHitTestVisible="False"
                              Cursor="{TemplateBinding Cursor}">

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Кнопки -->
    <!--#region Ссылочная кнопка -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonHyperLink">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True">

                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center">
                        </ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource AccentHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource AccentPressedBrush}"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Приоритетная -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonPriority">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center">
                        </ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="12" 
                                                      Opacity="0.3" 
                                                      Color="{StaticResource ShadowBrush}" 
                                                      ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryPressedBrush}"/>
                            <Setter TargetName="border" Property="Effect" Value="{x:Null}"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Обычная -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonStandard">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center">
                        </ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundDisabledHowerBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundDisabledPressedBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="#E0E4EB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Приоритетная c иконкой -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonIconPriority">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <StackPanel Orientation="Horizontal" 
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">

                            <icons:PackIcon Name="icon"
                                            Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Width="24"
                                            Height="24"
                                            Margin="0 0 5 0"
                                            Foreground="#ffffff"/>

                            <TextBlock Name="content"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"
                                       Foreground="#ffffff"/>

                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="12" 
                                                      Opacity="0.3" 
                                                      Color="{StaticResource ShadowBrush}" 
                                                      ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryPressedBrush}"/>
                            <Setter TargetName="border" Property="Effect" Value="{x:Null}"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Кнопка иконка большая прозрачная (для карточек) -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonIconTransperent">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Cursor="Hand"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <icons:PackIcon Name="icon"
                                        Cursor="Hand"
                                        Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Width="24"
                                        Height="24"
                                        Margin="12"
                                        Foreground="{StaticResource TextDisabledBrush}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="icon" Property="Foreground" Value="#ffffff"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="icon" Property="Foreground" Value="#ffffff"/>
                            <Setter TargetName="icon" Property="Opacity" Value="0.5"/>
                            <Setter Property="Foreground" Value="#E0E4EB"/>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Кнопка иконка большая (для карточек) -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonIcon">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <icons:PackIcon Name="icon"
                                        Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Width="24"
                                        Height="24"
                                        Margin="12"
                                        Foreground="#ffffff"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundDisabledHowerBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundDisabledPressedBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="#E0E4EB"/>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Кнопка иконка маленькая (для таблиц) -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonIconSmall">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="6">

                        <icons:PackIcon Name="icon"
                                        Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Width="18"
                                        Height="18"
                                        Margin="6"
                                        Foreground="#ffffff"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundDisabledHowerBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundDisabledPressedBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="#E0E4EB"/>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Кнопка параметра -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonParameter">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="Padding" Value="12 8"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                            <icons:PackIcon Name="icon"
                                            Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Width="24"
                                            Height="24"
                                            Margin="0 0 8 0"
                                            Foreground="#ffffff"/>

                            <TextBlock Name="content"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"
                                       Foreground="#ffffff"/>

                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundDisabledHowerBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundDisabledPressedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Кнопка внутри параметра приоритетная -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonInParameterPriority">
        <Setter Property="Background" Value="#5D77A7"/>
        <Setter Property="Padding" Value="8 6"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="5">

                        <TextBlock Name="content"
                                   Style="{StaticResource TextSmallSemiBold}"
                                   Text="{TemplateBinding Content}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Foreground="#ffffff"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#6B85B5"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#405D8F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Кнопка внутри параметра обычная -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonInParameterStandart">
        <Setter Property="Background" Value="#435977"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 6"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="5">

                        <TextBlock Name="content"
                                   Style="{StaticResource TextSmallSemiBold}"
                                   Text="{TemplateBinding Content}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Foreground="#ffffff"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#435977"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#2A3647"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Навигационная кнопка -->
    <Style TargetType="{x:Type RadioButton}" x:Key="RadioButtonNavigation">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Width" Value="195"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                            <icons:PackIcon Name="icon"
                                            Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Width="24"
                                            Height="24"
                                            Margin="0 0 8 0"
                                            Foreground="#ffffff"/>

                            <TextBlock Name="content"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"
                                       Foreground="#ffffff"/>

                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Активна -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                        </Trigger>

                        <!-- Не активна + не нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
                                <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                                <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                                <Setter Property="Background" Value="#42526F"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Радио кнопка -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <StackPanel VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Orientation="Horizontal">

                        <Grid Margin="0 0 6 0">

                            <Ellipse Fill="#5D77A7"
                                     Width="16"
                                     Height="16"
                                     SnapsToDevicePixels="True">
                            </Ellipse>

                            <Ellipse Name="watermark"
                                     Fill="#ffffff"
                                     Width="8"
                                     Height="8"
                                     SnapsToDevicePixels="True"
                                     Visibility="Hidden"/>
                        </Grid>

                        <TextBlock Name="content"
                                   Style="{StaticResource TextSmall}"
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   Foreground="#ffffff"/>
                    </StackPanel>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="watermark" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="watermark" Property="Visibility" Value="Visible"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Чек боксы -->
    <!--#region Стандартный -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">

                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="5">
                            <Grid>
                                <Rectangle Margin="10"/>

                                <icons:PackIcon Name="waterMark"
                                                Kind="Check"
                                                Foreground="#ffffff"
                                                Style="{StaticResource IconSmall}"/>
                            </Grid>
                        </Border>

                        <TextBlock Name="content" 
                                   Margin="6 0 0 0"
                                   Style="{StaticResource TextNormal}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="Показать пароль"/>
                    </StackPanel>

                    <ControlTemplate.Triggers>

                        <!-- Не активна + не нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="#ffffff"/>
                                <Setter TargetName="waterMark" Property="Opacity" Value="0.5"/>
                                <Setter TargetName="content" Property="Opacity" Value="0.5"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="#ffffff"/>
                                <Setter TargetName="content" Property="Opacity" Value="1"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="#ffffff"/>
                                <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="#ffffff"/>
                                <Setter TargetName="content" Property="Opacity" Value="1"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="1"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + не нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#ffffff"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="{StaticResource BackgroundDarkBrush}"/>
                                <Setter TargetName="content" Property="Opacity" Value="1"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#ffffff"/>
                                <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
                                <Setter TargetName="content" Property="Opacity" Value="0.5"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
                                <Setter Property="Opacity" Value="0.5"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="{StaticResource BackgroundDarkBrush}"/>
                                <Setter TargetName="content" Property="Opacity" Value="0.5"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="1"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Для сортировки (убывание / возрастание) -->
    <!--#region Стандартный -->
    <Style TargetType="{x:Type CheckBox}" x:Key="ChackBoxAscending">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <Grid>
                            <icons:PackIcon Name="waterMark"
                                            Kind="ChevronDoubleUp"
                                            Foreground="{StaticResource TextDisabledBrush}"
                                            Width="24"
                                            Height="24"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="waterMark" Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="waterMark" Property="Kind" Value="ChevronDoubleDown"/>
                        </Trigger>        

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Для выбора параметров-->
    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxSmall">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">

                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="5"
                                Height="16"
                                Width="16">

                            <Grid>
                                <Rectangle/>

                                <icons:PackIcon Name="waterMark"
                                                Kind="Check"
                                                Foreground="#ffffff"
                                                Style="{StaticResource IconMini}"/>
                            </Grid>
                        </Border>

                        <TextBlock Name="content" 
                                   Margin="6 0 0 0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Style="{StaticResource TextSmall}"
                                   Text="{TemplateBinding Content}"/>
                    </StackPanel>

                    <ControlTemplate.Triggers>

                        <!-- Не активна + не нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#5D77A7"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="#ffffff"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#5D77A7"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="#ffffff"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="#ffffff"/>
                                <Setter Property="Background" Value="#5D77A7"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="#ffffff"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + не нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#ffffff"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="#5D77A7"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="#ffffff"/>
                                <Setter Property="BorderBrush" Value="#5D77A7"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="#5D77A7"/>
                                <Setter TargetName="waterMark" Property="Foreground" Value="#5D77A7"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Комбобоксы -->
    <!--#region Стиль с отображением свойства Name -->
    <Style TargetType="{x:Type ComboBox}" x:Key="BindingNameCB">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="18 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10"
                                SnapsToDevicePixels="True">

                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Content="{Binding SelectedItem.Name, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedValue}"/>

                                <TextBlock x:Name="placeholderText"
                                           Padding="20 0"
                                           IsHitTestVisible="False"
                                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                           FontFamily="SF Pro Text"
                                           Visibility="Collapsed"
                                           FontSize="14"
                                           Foreground="{StaticResource TextDisabledBrush}"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"/>

                                <icons:PackIcon x:Name="arrowIcon"
                                                Kind="ChevronDown"
                                                Width="24"
                                                Height="24"
                                                Foreground="#FFFFFF"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Margin="0 0 12 0"/>

                                <ToggleButton x:Name="toggleButton"
                                              Opacity="0"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>
                            </Grid>
                        </Border>

                        <Popup Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Focusable="False"
                               PopupAnimation="Slide"
                               AllowsTransparency="True"
                               Placement="Bottom">
                            <Border x:Name="dropDownBorder"
                                    Background="{StaticResource BackgroundDarkBrush}"
                                    CornerRadius="10"
                                    Margin="0 4 0 0"
                                    BorderThickness="1"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    BorderBrush="{StaticResource AccentBrush}">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Placeholder Text -->
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="arrowIcon" Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <!-- Dropdown Opened -->
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger SourceName="toggleButton" Property="IsChecked" Value="True">
                            <Setter TargetName="arrowIcon" Property="Kind" Value="ChevronUp"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Стандартный стиль -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="18 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10"
                                SnapsToDevicePixels="True">

                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Content="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedValue}"/>

                                <TextBlock x:Name="placeholderText"
                                           Padding="20 0"
                                           IsHitTestVisible="False"
                                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                           FontFamily="SF Pro Text"
                                           Visibility="Collapsed"
                                           FontSize="14"
                                           Foreground="{StaticResource TextDisabledBrush}"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"/>

                                <icons:PackIcon x:Name="arrowIcon"
                                                Kind="ChevronDown"
                                                Width="24"
                                                Height="24"
                                                Foreground="#FFFFFF"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Margin="0 0 12 0"/>

                                <ToggleButton x:Name="toggleButton"
                                              Opacity="0"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>
                            </Grid>
                        </Border>

                        <Popup Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Focusable="False"
                               PopupAnimation="Slide"
                               AllowsTransparency="True"
                               Placement="Bottom">
                            <Border x:Name="dropDownBorder"
                                    Background="{StaticResource BackgroundDarkBrush}"
                                    CornerRadius="10"
                                    Margin="0 4 0 0"
                                    BorderThickness="1"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    BorderBrush="{StaticResource AccentBrush}">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Placeholder Text -->
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="arrowIcon" Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <!-- Dropdown Opened -->
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger SourceName="toggleButton" Property="IsChecked" Value="True">
                            <Setter TargetName="arrowIcon" Property="Kind" Value="ChevronUp"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Стандартный стиль объектов комбобокса -->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="18 10"
                            CornerRadius="10">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Фильтр -->
    <Style TargetType="{x:Type ComboBox}" x:Key="FilterCB">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}"/>
        <Setter Property="Padding" Value="12 8"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10"
                                SnapsToDevicePixels="True">

                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="32 0 0 0"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Content="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedValue}"/>

                                <TextBlock x:Name="placeholderText"
                                           Margin="32 0 0 0"
                                           IsHitTestVisible="False"
                                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                           FontFamily="SF Pro Text"
                                           Visibility="Collapsed"
                                           FontSize="14"
                                           Foreground="{StaticResource TextDisabledBrush}"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"/>

                                <icons:PackIcon x:Name="arrowIcon"
                                                Kind="FilterOutline"
                                                Width="24"
                                                Height="24"
                                                Foreground="{StaticResource TextDisabledBrush}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"/>

                                <ToggleButton x:Name="toggleButton"
                                              Opacity="0"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>
                            </Grid>
                        </Border>

                        <Popup Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Focusable="False"
                               PopupAnimation="Slide"
                               AllowsTransparency="True"
                               Placement="Bottom"> 
                            <Border x:Name="dropDownBorder"
                                    Background="{StaticResource BackgroundDarkBrush}"
                                    CornerRadius="10"
                                    Margin="0 4 0 0"
                                    BorderThickness="1"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    BorderBrush="{StaticResource AccentBrush}">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Placeholder Text -->
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="arrowIcon" Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            <Setter TargetName="placeholderText" Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <!-- Dropdown Opened -->
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger SourceName="toggleButton" Property="IsChecked" Value="True">
                            <Setter TargetName="arrowIcon" Property="Kind" Value="ChevronUp"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Сортировка -->
    <Style TargetType="{x:Type ComboBox}" x:Key="SorterCB">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}"/>
        <Setter Property="Padding" Value="12 8"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10"
                                SnapsToDevicePixels="True">

                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="32 0 0 0"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Content="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedValue}"/>

                                <TextBlock x:Name="placeholderText"
                                           Margin="32 0 0 0"
                                           IsHitTestVisible="False"
                                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                           FontFamily="SF Pro Text"
                                           Visibility="Collapsed"
                                           FontSize="14"
                                           Foreground="{StaticResource TextDisabledBrush}"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"/>

                                <icons:PackIcon x:Name="arrowIcon"
                                                Kind="Sort"
                                                Width="24"
                                                Height="24"
                                                Foreground="{StaticResource TextDisabledBrush}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"/>

                                <ToggleButton x:Name="toggleButton"
                                              Opacity="0"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>
                            </Grid>
                        </Border>

                        <Popup Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Focusable="False"
                               PopupAnimation="Slide"
                               AllowsTransparency="True"
                               Placement="Bottom">
                            <Border x:Name="dropDownBorder"
                                    Background="{StaticResource BackgroundDarkBrush}"
                                    CornerRadius="10"
                                    Margin="0 4 0 0"
                                    BorderThickness="1"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    BorderBrush="{StaticResource AccentBrush}">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Placeholder Text -->
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="arrowIcon" Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            <Setter TargetName="placeholderText" Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <!-- Dropdown Opened -->
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger SourceName="toggleButton" Property="IsChecked" Value="True">
                            <Setter TargetName="arrowIcon" Property="Kind" Value="ChevronUp"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#endregion-->

    <!--#region ScrollViewer и ScrollBar-->
    <!-- Стиль для ScrollBar в ItemsControl-->
    <Style TargetType="{x:Type ScrollViewer}" x:Key="ScrollViewerStandart">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Контент -->
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                        <!-- Вертикальный скроллбар -->
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Grid.Row="0"
                                   Orientation="Vertical"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <ScrollBar.Style>
                                <Style TargetType="{x:Type ScrollBar}">
                                    <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                <Grid>
                                                    <Border CornerRadius="8"
                                                            Background="{TemplateBinding Background}"/>
                                                    <Track x:Name="PART_Track"
                                                           IsDirectionReversed="True">
                                                        <Track.Thumb>
                                                            <Thumb>
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Background" Value="White"/>
                                                                        <Setter Property="Margin" Value="4.5"/>
                                                                        <Setter Property="BorderThickness" Value="0"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border CornerRadius="4"
                                                                                            Background="{TemplateBinding Background}"
                                                                                            BorderThickness="0">
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" Value="#CCCCCC"/>
                                                                                <!-- Серый при наведении -->
                                                                            </Trigger>
                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                <Setter Property="Background" Value="#666666"/>
                                                                                <!-- Темно-серый при нажатии -->
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Track.Thumb>
                                                    </Track>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ScrollBar.Style>
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для горизонтального ScrollBar в DataGrid-->
    <Style x:Key="ScrollBarStyleHorizontal" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Border CornerRadius="8" 
                                Background="{TemplateBinding Background}"/>
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="False">
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="Margin" Value="4.5"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border CornerRadius="4"
                                                                Background="{TemplateBinding Background}"
                                                                BorderThickness="0">
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#CCCCCC"/>
                                                </Trigger>
                                                <Trigger Property="IsDragging" Value="True">
                                                    <Setter Property="Background" Value="#666666"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для вертикального ScrollBar в DataGrid-->
    <Style x:Key="ScrollBarStyleVertical" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource BackgroundDisabledBrush}"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Border CornerRadius="8" 
                                Background="{TemplateBinding Background}"/>
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="Margin" Value="4.5"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border CornerRadius="4"
                                                                Background="{TemplateBinding Background}"
                                                                BorderThickness="0">
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#CCCCCC"/>
                                                </Trigger>
                                                <Trigger Property="IsDragging" Value="True">
                                                    <Setter Property="Background" Value="#666666"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region DataGrid-->
    <!-- DataGrid -->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}" 
                            CornerRadius="10"
                            SnapsToDevicePixels="True">

                        <ScrollViewer x:Name="DG_ScrollViewer" 
                                      Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <DataGridColumnHeadersPresenter 
                                                x:Name="PART_ColumnHeadersPresenter" 
                                                Grid.Column="1" 
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                        <!-- Разделительная линия -->
                                        <Border Grid.Row="1" 
                                                Grid.ColumnSpan="2" 
                                                VerticalAlignment="Top"
                                                Height="1" 
                                                Background="{StaticResource TextDisabledBrush}"
                                                Margin="0 -1"/>

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="True" Grid.ColumnSpan="2" Grid.Row="2"/>

                                        <!-- Вертикальный ScrollBar -->
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Column="2"
                                                   Grid.Row="2"
                                                   Orientation="Vertical"
                                                   Style="{StaticResource ScrollBarStyleVertical}"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                        <!-- Горизонтальный ScrollBar -->
                                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                   Grid.Row="3"
                                                   Grid.Column="1"
                                                   Orientation="Horizontal"
                                                   Style="{StaticResource ScrollBarStyleHorizontal}"
                                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                   Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}}"
                                                   ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}}"
                                                   Visibility="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}}"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Columns Header -->
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="20 20 12 20"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Padding="{TemplateBinding Padding}"
                                   Foreground="{TemplateBinding Foreground}" 
                                   FontWeight="{TemplateBinding FontWeight}" 
                                   TextWrapping="Wrap" 
                                   MaxWidth="170"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Rows -->
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Header" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="MinHeight" Value="45"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="1,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="True"
                            CornerRadius="10">
                        <Grid>

                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                            </SelectiveScrollingGrid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Триггер для выбранной записи -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Cells -->
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}"/>
        <Setter Property="Margin" Value="10 4 10 4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Margin="{TemplateBinding Margin}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Триггер для выбранной записи -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>